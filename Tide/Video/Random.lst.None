  Tue Apr 16 2024  8:49                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 3.49.1- Feb  6 2006    **
                     ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"C:\Work\Andre65\Tide\Video\Random.c",0
     7                        ;#include "stdlib.h"
     8                        	.file	"C:\WDC\Tools\INCLUDE\stdlib.h",0
     9                        	.file	"C:\WDC\Tools\INCLUDE\stddef.h",0
    10                        	.line	88
    11                        	.file	"C:\WDC\Tools\INCLUDE\stdlib.h",43
    12                        	.stag	fake1_,32,1
    13                        	.member	quot,0,5,8,16
    14                        	.member	rem,16,5,8,16
    15                        	.eos
    16                        	.stag	fake2_,64,2
    17                        	.member	quot,0,7,8,32
    18                        	.member	rem,32,7,8,32
    19                        	.eos
    20                        	.stag	int_sqrt,32,3
    21                        	.member	sqrt,0,16,8,16
    22                        	.member	frac,16,16,8,16
    23                        	.eos
    24                        	.line	205
    25                        	.file	"C:\Work\Andre65\Tide\Video\Random.c",1
    26                        ;#include "inttypes.h"
    27                        	.file	"C:\WDC\Tools\INCLUDE\inttypes.h",0
    28                        	.stag	fake4_,64,4
    29                        	.member	quot,0,7,8,32
    30                        	.member	rem,32,7,8,32
    31                        	.eos
    32                        	.line	111
    33                        	.file	"C:\Work\Andre65\Tide\Video\Random.c",2
    34                        ;
    35                        ;
    36                        ;int16_t* AllocateRandomArray(uint16_t uiRandomLen
                    gth, uint16_t uiModulus, int16_t uiOffset)
    37                        ;{
    38                        	.line	5
    39                        	.line	6
    40                        	code
    41                        	xdef	~~AllocateRandomArray
    42                        	func
    43                        	.function	6
    44                        ~~AllocateRandomArray:
    45                        	longa	on
    46                        	longi	on
    47 00:0000: 3B           	tsc
    48 00:0001: 38           	sec
    49 00:0002: E9 14 00     	sbc	#L2
    50 00:0005: 1B           	tcs
    51 00:0006: 0B           	phd
    52 00:0007: 5B           	tcd
    53             00000004   uiRandomLength_0	set	4
    54             00000006   uiModulus_0	set	6
    55             00000008   uiOffset_0	set	8
    56                        	.block	6
    57                        ;	uint16_t	y;
    58                        ;	int16_t		r;
    59                        ;	int16_t*	piRandom;
    60                        ;	
    61                        ;	piRandom = farmalloc(uiRandomLength * sizeof(int
                    16_t));
    62             00000000   y_1	set	0
    63             00000002   r_1	set	2
    64             00000004   piRandom_1	set	4
    65                        	.sym	y,0,16,1,16
    66                        	.sym	r,2,5,1,16
    67                        	.sym	piRandom,4,133,1,32
    68                        	.sym	uiRandomLength,4,16,6,16
    69                        	.sym	uiModulus,6,16,6,16
    70                        	.sym	uiOffset,8,5,6,16
    71                        	.line	11
    72 00:0008: A5 18        	lda	<L2+uiRandomLength_0
    73 00:000A: 0A           	asl	A
    74 00:000B: 85 01        	sta	<R0
    75 00:000D: A5 01        	lda	<R0
    76 00:000F: 85 01        	sta	<R0
    77 00:0011: 64 03        	stz	<R0+2
    78 00:0013: D4 03        	pei	<R0+2
    79 00:0015: D4 01        	pei	<R0
    80 00:0017: 22 xx xx xx  	jsl	~~farmalloc
    81 00:001B: 85 11        	sta	<L3+piRandom_1
    82 00:001D: 86 13        	stx	<L3+piRandom_1+2
    83                        ;	for (y = 0; y < uiRandomLength; y++)
    84                        	.line	12
    85 00:001F: 64 0D        	stz	<L3+y_1
    86 00:0021: 82 02 00     	brl	L10002
    87                        L10001:
    88 00:0024: E6 0D        	inc	<L3+y_1
    89                        L10002:
    90 00:0026: A5 0D        	lda	<L3+y_1
    91 00:0028: C5 18        	cmp	<L2+uiRandomLength_0
    92 00:002A: 90 03        	bcc	L5
    93 00:002C: 82 40 00     	brl	L10003
    94                        L5:
    95                        ;	{
    96                        	.line	13
    97                        ;		r = (rand() % uiModulus) + uiOffset;
    98                        	.line	14
    99 00:002F: 22 xx xx xx  	jsl	~~rand
   100 00:0033: 85 01        	sta	<R0
   101 00:0035: A5 01        	lda	<R0
   102 00:0037: A6 1A        	ldx	<L2+uiModulus_0
   103                        	xref	~~~umd
   104 00:0039: 22 xx xx xx  	jsl	~~~umd
   105 00:003D: 85 01        	sta	<R0
   106 00:003F: 18           	clc
   107 00:0040: A5 01        	lda	<R0
   108 00:0042: 65 1C        	adc	<L2+uiOffset_0
   109 00:0044: 85 0F        	sta	<L3+r_1
   110                        ;		piRandom[y] = r;
   111                        	.line	15
   112 00:0046: A5 0D        	lda	<L3+y_1
   113 00:0048: 85 05        	sta	<R1
   114 00:004A: 64 07        	stz	<R1+2
   115 00:004C: D4 07        	pei	<R1+2
   116 00:004E: D4 05        	pei	<R1
   117 00:0050: A9 01 00     	lda	#$1
   118                        	xref	~~~lasl
   119 00:0053: 22 xx xx xx  	jsl	~~~lasl
   120 00:0057: 85 01        	sta	<R0
   121 00:0059: 86 03        	stx	<R0+2
   122 00:005B: 18           	clc
   123 00:005C: A5 11        	lda	<L3+piRandom_1
   124 00:005E: 65 01        	adc	<R0
   125 00:0060: 85 09        	sta	<R2
   126 00:0062: A5 13        	lda	<L3+piRandom_1+2
   127 00:0064: 65 03        	adc	<R0+2
   128 00:0066: 85 0B        	sta	<R2+2
   129 00:0068: A5 0F        	lda	<L3+r_1
   130 00:006A: 87 09        	sta	[<R2]
   131                        ;	}
   132                        	.line	16
   133 00:006C: 82 B5 FF     	brl	L10001
   134                        L10003:
   135                        ;	return piRandom;
   136                        	.line	17
   137 00:006F: A6 13        	ldx	<L3+piRandom_1+2
   138 00:0071: A5 11        	lda	<L3+piRandom_1
   139                        L6:
   140 00:0073: A8           	tay
   141 00:0074: A5 16        	lda	<L2+2
   142 00:0076: 85 1C        	sta	<L2+2+6
   143 00:0078: A5 15        	lda	<L2+1
   144 00:007A: 85 1B        	sta	<L2+1+6
   145 00:007C: 2B           	pld
   146 00:007D: 3B           	tsc
   147 00:007E: 18           	clc
   148 00:007F: 69 1A 00     	adc	#L2+6
   149 00:0082: 1B           	tcs
   150 00:0083: 98           	tya
   151 00:0084: 6B           	rtl
   152                        ;}
   153                        	.line	18
   154                        	.endblock	18
   155             00000014   L2	equ	20
   156             0000000D   L3	equ	13
   157                        	ends
   158                        	efunc
   159                        	.endfunc	18,13,20
   160                        	.line	18
   161                        ;
   162                        ;
   163                        	.line	19
   164                        	.file	"C:\Work\Andre65\Tide\Video\Random.c",5
   165                        	xref	~~farmalloc
   166                        	xref	~~rand
   167                        	.sym	~~AllocateRandomArray,~~AllocateRandomAr
                    ray,1093,2,32
   168                        	.sym	imaxdiv_t,0,10,14,64,4
   169                        	.sym	uintmax_t,0,18,14,32
   170                        	.sym	intmax_t,0,7,14,32
   171                        	.sym	uintptr_t,0,16,14,16
   172                        	.sym	intptr_t,0,5,14,16
   173                        	.sym	uint32_t,0,18,14,32
   174                        	.sym	int32_t,0,7,14,32
   175                        	.sym	uint16_t,0,16,14,16
   176                        	.sym	int16_t,0,5,14,16
   177                        	.sym	uint8_t,0,14,14,8
   178                        	.sym	int8_t,0,2,14,8
   179                        	.sym	~~farmalloc,~~farmalloc,1089,18,32
   180                        	.sym	~~rand,~~rand,69,18,0
   181                        	.sym	ldiv_t,0,10,14,64,2
   182                        	.sym	div_t,0,10,14,32,1
   183                        	.sym	wctype_t,0,16,14,16
   184                        	.sym	wint_t,0,16,14,16
   185                        	.sym	wchar_t,0,14,14,8
   186                        	.sym	ptrdiff_t,0,7,14,32
   187                        	.sym	size_t,0,16,14,16
   188                        	end


      Lines assembled: 188
      Errors: 0
